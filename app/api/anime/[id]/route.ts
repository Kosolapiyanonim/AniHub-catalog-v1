import { NextResponse } from "next/server"
import { supabase } from "@/lib/supabase"

export async function GET(request: Request, { params }: { params: { id: string } }) {
  try {
    const { id } = params

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ID –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ shikimori_id (—á–∏—Å–ª–æ –∏–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å —á–∏—Å–ª–æ–º)
    if (!id || id === "popular" || id === "search" || id === "database") {
      return NextResponse.json({ error: "Invalid anime ID" }, { status: 400 })
    }

    console.log("üé¨ Fetching anime data for shikimori_id:", id)

    // –ò—â–µ–º –ø–æ shikimori_id –≤ –Ω–∞—à–µ–º VIEW
    const { data, error } = await supabase
      .from("animes_with_relations")
      .select("*")
      .eq("shikimori_id", id)
      .limit(1)
      .maybeSingle() // –ò—Å–ø–æ–ª—å–∑—É–µ–º maybeSingle –≤–º–µ—Å—Ç–æ single

    if (error) {
      console.error(`‚ùå Database error for shikimori_id ${id}:`, error)
      return NextResponse.json({ error: "Database error" }, { status: 500 })
    }

    if (!data) {
      console.log(`‚ùå Anime with shikimori_id ${id} not found`)
      return NextResponse.json({ error: "Anime not found" }, { status: 404 })
    }

    console.log("‚úÖ Anime found:", data.title)
    return NextResponse.json(data)
  } catch (error) {
    console.error("‚ùå Error in anime API:", error)
    return NextResponse.json({ error: "Internal server error" }, { status: 500 })
  }
}
