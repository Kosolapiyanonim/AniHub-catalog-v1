// –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª: /app/api/studios/route.ts

import { NextResponse } from "next/server";
import { supabase } from "@/lib/supabase";

export async function GET() {
  try {
    console.log("üè¢ Fetching studios from database...");

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç—É–¥–∏–∏ –∏–∑ –±–∞–∑—ã, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –∏–º–µ–Ω–∏
    const { data, error } = await supabase
      .from("studios")
      .select("name")
      .order("name");

    if (error) {
      console.error("‚ùå Error fetching studios:", error);
      throw error;
    }

    const studios = data?.map((item) => item.name) || [];
    console.log(`‚úÖ Found ${studios.length} studios`);

    return NextResponse.json({
      studios,
      total: studios.length,
    });
  } catch (error) {
    const message = error instanceof Error ? error.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞";
    console.error("‚ùå Studios API error:", message);
    return NextResponse.json({ status: "error", message, studios: [] }, { status: 500 });
  }
}
